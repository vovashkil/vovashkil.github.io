AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Trivia Game
Resources:
  TriviaWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: TriviaWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
  TriviaConnections:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: connectionId
        AttributeType: S
      - AttributeName: gameId
        AttributeType: S
      KeySchema:
      - AttributeName: gameId
        KeyType: HASH
      - AttributeName: connectionId
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  NewGameRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: TriviaWebSocket
      RouteKey: newgame
      AuthorizationType: NONE
      OperationName: NewGameRoute
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: NewGameInteg
  NewGameInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: TriviaWebSocket
      Description: NewGame Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NewGameFunction.Arn}/invocations
  NewGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/SamGameNewGameFunctionRole
      CodeUri: NewGameFunction
      Handler: app.trivia_newgame
      Runtime: python3.9
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TriviaConnections
          APIGW_ENDPOINT:
            Fn::Sub: https://${TriviaWebSocket}.execute-api.${AWS::Region}.amazonaws.com/Prod
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TriviaConnections
      - Statement:
        - Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TriviaWebSocket}/*
    Metadata:
      SamResourceId: NewGameFunction
  NewGamePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - TriviaWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: NewGameFunction
      Principal: apigateway.amazonaws.com
  JoinGameRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: TriviaWebSocket
      RouteKey: joingame
      AuthorizationType: NONE
      OperationName: JoinGameRoute
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: JoinGameInteg
  JoinGameInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: TriviaWebSocket
      Description: JoinGame Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${JoinGameFunction.Arn}/invocations
  JoinGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/SamGameJoinGameFunctionRole
      CodeUri: JoinGameFunction
      Handler: app.trivia_joingame
      Runtime: python3.9
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TriviaConnections
          APIGW_ENDPOINT:
            Fn::Sub: https://${TriviaWebSocket}.execute-api.${AWS::Region}.amazonaws.com/Prod
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TriviaConnections
      - Statement:
        - Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TriviaWebSocket}/*
    Metadata:
      SamResourceId: JoinGameFunction
  JoinGamePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - TriviaWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: JoinGameFunction
      Principal: apigateway.amazonaws.com
  StartGameRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: TriviaWebSocket
      RouteKey: startgame
      AuthorizationType: NONE
      OperationName: StartGameRoute
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: StartGameInteg
  StartGameInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: TriviaWebSocket
      Description: StartGame Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StartGameFunction.Arn}/invocations
  StartGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/SamGameStartGameFunctionRole
      CodeUri: StartGameFunction
      Handler: app.trivia_startgame
      Runtime: python3.9
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TriviaConnections
          APIGW_ENDPOINT:
            Fn::Sub: https://${TriviaWebSocket}.execute-api.${AWS::Region}.amazonaws.com/Prod
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TriviaConnections
      - Statement:
        - Effect: Allow
          Action:
          - states:StartExecution
          Resource:
          - '*'
      - Statement:
        - Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TriviaWebSocket}/*
    Metadata:
      SamResourceId: StartGameFunction
  StartGamePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - TriviaWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: StartGameFunction
      Principal: apigateway.amazonaws.com
  AnswerRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: TriviaWebSocket
      RouteKey: answer
      AuthorizationType: NONE
      OperationName: AnswerRoute
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: AnswerInteg
  AnswerInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: TriviaWebSocket
      Description: Answer Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AnswerFunction.Arn}/invocations
  AnswerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/SamGameAnswerFunctionRole
      CodeUri: AnswerFunction
      Handler: app.trivia_answer
      Runtime: python3.9
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TriviaConnections
          APIGW_ENDPOINT:
            Fn::Sub: https://${TriviaWebSocket}.execute-api.${AWS::Region}.amazonaws.com/Prod
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TriviaConnections
      - Statement:
        - Effect: Allow
          Action:
          - states:StartExecution
          Resource:
          - '*'
      - Statement:
        - Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TriviaWebSocket}/*
    Metadata:
      SamResourceId: AnswerFunction
  AnswerPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - TriviaWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: AnswerFunction
      Principal: apigateway.amazonaws.com
  QuestionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/SamGameQuestionGameFunctionRole
      CodeUri: QuestionFunction
      Handler: app.trivia_question
      Runtime: python3.9
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TriviaConnections
          APIGW_ENDPOINT:
            Fn::Sub: https://${TriviaWebSocket}.execute-api.${AWS::Region}.amazonaws.com/Prod
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TriviaConnections
      - Statement:
        - Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TriviaWebSocket}/*
    Metadata:
      SamResourceId: QuestionFunction
  CalculateScoresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/SamGameCalculateScoresFunctionRole
      CodeUri: CalculateScoresFunction
      Handler: app.trivia_calculate_scores
      Runtime: python3.9
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TriviaConnections
          APIGW_ENDPOINT:
            Fn::Sub: https://${TriviaWebSocket}.execute-api.${AWS::Region}.amazonaws.com/Prod
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TriviaConnections
      - Statement:
        - Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TriviaWebSocket}/*
    Metadata:
      SamResourceId: CalculateScoresFunction
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - NewGameRoute
    - JoinGameRoute
    - NewGameRoute
    - JoinGameRoute
    - StartGameRoute
    - AnswerRoute
    Properties:
      ApiId:
        Ref: TriviaWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId:
        Ref: Deployment
      ApiId:
        Ref: TriviaWebSocket
Outputs:
  TriviaWebSocketApi:
    Description: API Gateway websockets endpoint
    Value:
      Fn::Sub: wss://${TriviaWebSocket}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
